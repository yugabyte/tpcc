 Plan for insert_order_line

 Insert on order_line  (cost=2.25..35.40 rows=100 width=158)
   ->  Subquery Scan on "*SELECT*"  (cost=2.25..35.40 rows=100 width=158)
         ->  Nested Loop  (cost=2.25..33.40 rows=100 width=164)
               Join Filter: ((u.i_id)::integer = s.s_i_id)
               CTE order_lines
                 ->  WindowAgg  (cost=0.00..2.25 rows=100 width=20)
                       ->  Function Scan on unnest u_1  (cost=0.00..1.00 rows=100 width=12)
               ->  Nested Loop  (cost=0.00..17.00 rows=100 width=36)
                     ->  CTE Scan on order_lines u  (cost=0.00..2.00 rows=100 width=20)
                     ->  Index Scan using item_pkey on item i  (cost=0.00..0.15 rows=1 width=16)
                           Index Cond: (i_id = (u.i_id)::integer)
               ->  Index Scan using idx_s_i_id on stock s  (cost=0.00..0.12 rows=1 width=104)
                     Index Cond: (s_i_id = i.i_id)

